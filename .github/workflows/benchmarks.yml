name: Benchmarks

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'src/**'
      - 'benches/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  benchmark:
    name: Run Benchmarks
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-bench-
            ${{ runner.os }}-cargo-
      
      - name: Install criterion
        run: cargo install cargo-criterion --locked
      
      - name: Run benchmarks
        run: |
          cargo bench --all-features -- --output-format bencher | tee output.txt
      
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        if: github.event_name != 'pull_request'
        with:
          name: ghciwatch Benchmarks
          tool: 'cargo'
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
      
      - name: Compare benchmarks (PR)
        uses: benchmark-action/github-action-benchmark@v1
        if: github.event_name == 'pull_request'
        with:
          name: ghciwatch Benchmarks
          tool: 'cargo'
          output-file-path: output.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
          alert-threshold: '110%'
          fail-on-alert: false
          comment-always: true
      
      - name: Upload criterion reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: criterion-reports
          path: target/criterion
          retention-days: 30

  benchmark-regression-check:
    name: Check for Performance Regressions
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: benchmark
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-bench-baseline-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Save baseline
        run: |
          cargo bench -- --save-baseline main
      
      - uses: actions/checkout@v4
      
      - name: Run comparison
        run: |
          cargo bench -- --baseline main --output-format bencher | tee comparison.txt
      
      - name: Comment PR with comparison
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const comparison = fs.readFileSync('comparison.txt', 'utf8');
            
            const comment = `## Benchmark Comparison
            
            <details>
            <summary>Click to expand benchmark results</summary>
            
            \`\`\`
            ${comparison}
            \`\`\`
            
            </details>
            
            [View full criterion reports](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });